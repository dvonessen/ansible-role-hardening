---
- name: ensure System.map files are only accessible by root
  block:
    - name: find System.map files
      find:
        paths: /boot
        pattern: "*System.map*"
      register: __hardening_system_map_files

    - name: ensure System.map file are only accessible by root user
      file:
        path: "{{ item.path }}"
        owner: root
        group: root
        mode: 0600
      loop: "{{ __hardening_system_map_files.files }}"
      when: __hardening_system_map_files.files | length > 0

- name: ensure no world writable files exists
  block:
    - name: find world writable files
      shell:
        cmd: 'find / -type f -perm /o=w -print -o \( -path /dev -or -path /sys -or -path /proc -or -path {{ hardening_file_perms_bin_dirs | list | join(" -or -path ") }} \) -prune'
      register: __hardening_world_writeable_files
      changed_when: false
      ignore_errors: true

    - name: remove world writable flag from files
      file:
        path: "{{ item }}"
        mode: o-w
        state: file
      loop: "{{ __hardening_world_writeable_files.stdout_lines }}"

- name: ensure on world writable directories SGID is set
  block:
    - name: find world writable directories
      shell:
        cmd: 'find / -type d -perm /o=w -print -o \( -path /dev -or -path /sys -or -path /proc -or -path /var/tmp \) -prune'
      register: __hardening_world_writeable_dirs
      changed_when: false
      ignore_errors: true

    - name: set sticky bit to world writable directories
      file:
        path: "{{ item }}"
        mode: +t
        state: directory
      loop: "{{ __hardening_world_writeable_dirs.stdout_lines }}"

- name: ensure system binaries are not writeable by group or world
  block:
    - name: find files in bin directories with group or other write permissions
      shell:
        cmd: "find -L {{ hardening_file_perms_bin_dirs | list  | join(' ') }} -type f -perm /go+w"
      register: __hardening_group_other_write_bin_files
      changed_when: false
      ignore_errors: true

    - name: unset group and others write permission in bin directories
      file:
        path: "{{ item }}"
        mode: go-w
        state: file
      loop: "{{ __hardening_group_other_write_bin_files.stdout_lines }}"

- name: ensure skeleton files matches umask setting
  block:
    - name: find all files in /etc/skel
      shell:
        cmd: "find /etc/skel/ -type f"
      register: __hardening_skeleton_files
      changed_when: false

    - name: ensure correct permission
      file:
        path: "{{ item }}"
        mode: "0600"
      loop: "{{ __hardening_skeleton_files.stdout_lines }}"

- name: ensure account files have correct permissions
  block:
    - name: ensure shadow permissions
      file:
        path: "{{ item }}"
        owner: "{{ hardening_file_perms_shadow.user }}"
        group: "{{ hardening_file_perms_shadow.group }}"
        mode: "{{ hardening_file_perms_shadow.mode }}"
      loop:
        - /etc/shadow
        - /etc/gshadow

    - name: ensure passwd permissions
      file:
        path: "{{ item }}"
        owner: "{{ hardening_file_perms_passwd.user }}"
        group: "{{ hardening_file_perms_passwd.group }}"
        mode: "{{ hardening_file_perms_passwd.mode }}"
      loop:
        - /etc/passwd
        - /etc/group

- name: ensure system libraries have restrictive permissions
  block:
    - name: find all system library files
      shell:
        cmd: "find /lib* /usr/lib* -type f -perm /go=w -o -type f -not -user root"
      changed_when: false
      ignore_errors: true
      register: __hardening_system_libraries_perm_not_root

    - name: set correct owner and permission to system libraries
      file:
        path: "{{ item }}"
        owner: root
        mode: og-w
        state: file
      loop: "{{ __hardening_system_libraries_perm_not_root.stdout_lines }}"

- name: ensure users home directories are not group writable
  block:
    - name: get list of all user home directories
      shell:
        cmd: "find /home -mindepth 1 -maxdepth 1 -type d"
      register: __hardening_users_home
      changed_when: false
      ignore_errors: true

    - name: ensure users home directories are not group writable
      file:
        path: "{{ item }}"
        mode: g-w,o-rwx
        state: directory
      loop: "{{ __hardening_users_home.stdout_lines }}"

- name: ensure directories and files do not have more permissions than 0750 in home directory
  block:
    - name: find files in /home that do have more permissions than 0750
      shell:
        cmd: "find /home/*/ -type f -mindepth 1 -perm /027"
      register: __hardening_home_files
      changed_when: false
      ignore_errors: true

    - name: set correct permission to home directory files
      file:
        path: "{{ item }}"
        mode: 0750
        state: file
      changed_when: false
      loop: "{{ __hardening_home_files.stdout_lines }}"

    - name: find directories in  /home that do have more permissions than 0750
      shell:
        cmd: "find /home/*/ -type d -mindepth 1 -perm /027"
      register: __hardening_home_directories
      changed_when: false
      ignore_errors: true

    - name: set correct permission to home directory files and directories
      file:
        path: "{{ item }}"
        mode: g-w,o-rwx
        state: directory
      changed_when: false
      loop: "{{ __hardening_home_directories.stdout_lines }}"
